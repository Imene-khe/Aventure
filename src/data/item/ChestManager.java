package data.item;

import data.map.Block;

import java.util.ArrayList;
import java.util.HashMap;

public class ChestManager {
    private HashMap<Block, String> chests; // Map pour stocker les coffres et leurs positions

    public ChestManager() {
        chests = new HashMap<>();
    }

    // Ajoutez un coffre √† un bloc sp√©cifique
    public void addChest(Block block, String chestType) {
        if (chests.containsKey(block)) {
            System.out.println("‚ö†Ô∏è Tentative d'ajout d'un coffre sur un bloc d√©j√† occup√© : " + block);
        } else {
            chests.put(block, chestType);
            System.out.println("‚úÖ Coffre ajout√© √† : " + block + " | Type : " + chestType);
        }
    }

    // R√©cup√®re les coffres (les blocs o√π il y a des coffres)
    public HashMap<Block, String> getChests() {
        System.out.println("üîç Nombre total de coffres stock√©s : " + chests.size());
        for (Block block : chests.keySet()) {
            System.out.println("   - Coffre en : " + block + " | Type : " + chests.get(block));
        }
        return chests;
    }

    // M√©thode pour ouvrir un coffre (le contenu serait g√©r√© ici)
    public ArrayList<String> openChest(String chestKey) {
        System.out.println("üì¶ Tentative d'ouverture du coffre : " + chestKey);
        return new ArrayList<>(); // Placeholder, √† impl√©menter selon la logique du jeu
    }

    public static void main(String[] args) {
        ChestManager chestManager = new ChestManager();

        // Cr√©ation de blocs fictifs pour le test
        Block block1 = new Block(2, 3);
        Block block2 = new Block(5, 7);
        Block block3 = new Block(1, 1);
        Block block4 = new Block(2, 3); // Test d'ajout d'un coffre sur un bloc d√©j√† occup√©

        // Ajout de coffres √† ces blocs
        chestManager.addChest(block1, "golden_chest");
        chestManager.addChest(block2, "wooden_chest");
        chestManager.addChest(block3, "mystic_chest");
        chestManager.addChest(block4, "duplicate_chest"); // Devrait afficher un message d'avertissement

        // Affichage des coffres stock√©s
        chestManager.getChests();

        // V√©rification de l'acc√®s aux coffres
        System.out.println("üìä Nombre final de coffres enregistr√©s : " + chestManager.getChests().size());
    }
}
